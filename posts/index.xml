<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on PengSite</title>
    <link>/posts/</link>
    <description>Recent content in Posts on PengSite</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Mon, 09 Oct 2017 00:00:00 +0000</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>java多线程知识总结</title>
      <link>/2017/duoxianc/</link>
      <pubDate>Mon, 09 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/duoxianc/</guid>
      <description>多线程   概念：是指从软件或者硬件上实现多个线程并发执行的技术
  具有多线程能力的计算机因有硬件支持而能够在同一时间执行多个线程，提升性能。
  并行：在同一时刻，有多个指令在多个CPU上同时执行
  并发：在同一时刻，有多个指令在单个CPU上交替执行
  进程：是正在运行的软件
 独立性：进程是一个能独立运行的基本单位，同时也是系统分配资源和调度的独立单位 动态性：进程的实质是程序的一次执行过程，进程是动态产生，动态消亡 并发性：任何进程都可以同其它进程一起并发执行    线程：是进程中的单个顺序控制流，是一条执行路径
 单线程：一个进程如果只有一条执行路径，则称为单线程程序 多线程：一个进程如果有多条执行路径，则称为多线程程序    多线程的实现方案
  继承Thread类的方式进行实现
  定义一个类MyThread继承Thread类
  在MyThread类中重写run()方法
  创建MyThread类的对象
  启动线程
  代码实现
public class MyThread extends Thread{ @Override public void run() { for (int i = 0; i &amp;lt; 100; i++) { System.out.println(&amp;quot;线程开启了&amp;quot;+i); } } } 测试类：</description>
    </item>
    
    <item>
      <title>File与IO详解</title>
      <link>/2017/stream/</link>
      <pubDate>Fri, 06 Oct 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/stream/</guid>
      <description>File和IO详解 1. IO流是什么?  可以将数据从本地文件中读取出来 可以将数据从内存保存到本地文件  2. File类是什么?  在读写数据时告诉虚拟机要操作的(文件/文件夹)在哪 对(文件/文件夹)本身进行操作，包括创建、删除等  3. File类的介绍和构造方法  File类介绍  它是文件和目录路径名的抽象表示 文件和目录可以通过File封装成对象 File封装的对象仅仅是一个路径名。它可以是存在的，也可以是不存在的。      File类构造方法
   方法名 说明     File(String pathname) 通过将给定的路径名字符串转换为抽象路径名来创建新的 File实例   File(String parent, String child) 从父路径名字符串和子路径名字符串创建新的 File实例   File(File parent, String child) 从父抽象路径名和子路径名字符串创建新的 File实例      代码演示
 //File(String pathname) 通过将给定的路径名字符串转换为抽象路径名来创建新的 File实例。 String path = &amp;quot;C:\\itheima\\a.</description>
    </item>
    
    <item>
      <title>Stream流详解与应用</title>
      <link>/2017/file_io/</link>
      <pubDate>Sat, 30 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/file_io/</guid>
      <description>Stream流详解与应用 1. 什么是 Stream？ ​	Stream（流）是一个来自数据源的元素队列并支持聚合操作 ​	元素是特定类型的对象，形成一个队列。Java中的Stream并不会存储元素，而是按需计算。 ​	流的来源：可以是集合，数组，I/O channel， 产生器generator 等。 ​	聚合操作：类似SQL语句一样的操作， 比如filter, map, reduce, find, match, sorted等。
2. Stream基础特征 ​	Pipelining: 中间操作都会返回流对象本身。这样多个操作可以串联成一个管道， 如同流式风格（fluent style）。 这样做可以对操作进行优化， 比如延迟执行(laziness)和短路( short-circuiting)。 ​	内部迭代： 以前对集合遍历都是通过Iterator或者For-Each的方式, 显式的在集合外部进行迭代， 这叫做	外部迭代。 Stream提供了内部迭代的方式， 通过访问者模式(Visitor)实现。
3. Stream流的三类方法 1. 获取Steam流 : 可以理解成创建一条流水线，并把数据放到流水线上准备进行操作 2. 中间方法 : 可以理解成流水线上的操作，一次操作完毕之后，还可以继续进行其他操作 3. 是流水线上的最后一个操作，一个Stream流只能有一个终结方法  4. Stream流的获取方法   单列集合
可以使用Collection接口中的默认方法stream(),生成流
default Stream&amp;lt;E&amp;gt; stream()   双列集合
间接的生成流 可以先通过keySet或者entrySet获取一个Set集合，再获取Stream流
  数组
Arrays中的静态方法stream生成流</description>
    </item>
    
    <item>
      <title>Hugo搭建个人博客到GitHub Pages</title>
      <link>/2017/hugo/</link>
      <pubDate>Thu, 28 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>/2017/hugo/</guid>
      <description>Windows下安装Hugo以及Git工具 到Github下载Hugo，下载对应的操作系统版本的Hugo文件。
到Git网站下载对应的操作系统版本的Git文件。
  下载完成之后解压缩，我直接解压到桌面blog文件夹下进行管理(不建议桌面)。然后添加环境变量；我的路径为:C:\Users\Administrator\Desktop\blog\hugo;也就是把此路径加入环境变量。
  添加环境变量的方法:设置-&amp;gt;系统-&amp;gt;关于-&amp;gt;高级系统设置-&amp;gt;环境变量-&amp;gt;path-&amp;gt;新建-&amp;gt;确定
  检查一下是否安装成功：
cmd键入命令: hugo version #出现相应版本号即为安装成功 # hugo v0.82.1-60618210 windows/amd64 BuildDate=2021-04-20T11:02:50Z VendorInfo=gohugoio   用Hugo创建自己的博客 在hugo同名文件下使用Git命令快速生成站点:
# 您也可以 hugo new site /path/to/site # 比如希望生成到 /path/to/site 路径 hugo new site myblog 这样就在 myblog 目录里生成了初始站点，cd myblog进入目录 ls 查看目录结构 ：
 ▸ archetypes/ ▸ content/ ▸ layouts/ ▸ static/ ▸ themes/ config.toml 其中 content 文件夹存放博文，layouts 文件夹存放博客模版，比如博客的页面结构。static 文件夹存放前端文件和以后显示在博客中的图片，themes 存放主题文件，安装的主题都会存放在该文件夹中。config.toml 是博客的配置文件。
  选择主题并下载安装 到hugo官网下载主题，下面是我比较喜欢的博客主题，比较简约:</description>
    </item>
    
  </channel>
</rss>
